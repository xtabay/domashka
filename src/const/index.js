export const FAQ = [
    {
        id: 1,
        title: 'Как создать репозиторий?',
        description: 'Для работы с системой контроля версий Git необходимо создать Git-репозиторий, выбрав пункт “Repositories” в главном меню. Далее произойдёт переадресация в терминал, где необходимо будет указать директорию для создания репозитория.'
    },
    {
        id: 2,
        title: 'Как удалить репозиторий?',
        description: 'Для удаления уже существующего репозитория, необходимо в главном меню выбрать кнопку “Repositories”, и в выпавшем меню выбрать пункт “Удалить”, далее произойдёт переадресация в терминал, где необходимо указать место расположения уже существующего  репозитория. Директория будет полностью удалена.'
    },
    {
        id: 3,
        title: 'Как редактировать репозиторий?',
        description: 'Для внесения изменений в уже существующего репозиторий, необходимо в главном меню выбрать кнопку “Repositories”, и в выпавшем меню выбрать пункт “Редактирование”, далее произойдёт переадресация в терминал, где необходимо ввести имя существующего репозитория, ввести новый URL для репозитория, ввести новое имя для репозитория. Если необходимо сохранить исходное имя или URL, необходимо ввести их по новой, без изменений.'
    },
    {
        id: 4,
        title: 'Как добавить файлы в репозиторий?',
        description: 'Для добавления файла в репозиторий, необходимо в главном меню выбрать кнопку “Files”, и в выпавшем меню выбрать пункт “Добавление”, далее произойдёт переадресация в терминал, где необходимо ввести имя файла, который нужно добавить. Файл будет добавлен в рабочий репозиторий.'
    },
    {
        id: 5,
        title: 'Как удалить файлы из репозитория?',
        description: 'Для удаления файла в уже из репозитория, необходимо в главном меню выбрать кнопку “Files”, и в выпавшем меню выбрать пункт “Удаление”, далее произойдёт переадресация в терминал, где необходимо ввести путь файла, который необходимо удалить.'
    },
    {
        id: 6,
        title: 'Как создать коммит?',
        description: 'В главном меню выбрать кнопку “Commits”, и в выпавшем меню выбрать “Создание”. Далее в терминале необходимо ввести название коммита. Коммит будет успешно создан.'
    },
    {
        id: 7,
        title: 'Как удалить коммит?',
        description: 'В главном меню выбрать кнопку “Commits”, и в выпавшем меню выбрать “Удаление”. Далее в терминале необходимо ввести номер коммита. Коммит будет успешно удалён.'
    },
    {
        id: 8,
        title: 'Как создать ветку?',
        description: 'Git-ветка представляет собой легковесный и подвижный указатель на один из созданных коммитов. Главная ветка называется master. При создании новой ветки, создается еще один другой указатель на коммит. Чтобы создать ветку, необходимо выполнить следующее. Для создания ветки необходимо в главном меню выбрать кнопку “branches”, и в выпавшем меню выбрать пункт “создание”, далее произойдёт переадресация в терминал, где необходимо ввести имя для новой ветки.'
    },
    {
        id: 9,
        title: 'Как редактировать ветку?',
        description: 'Чтобы отредактировать определенную созданную ранее ветку необходимо выполнить следующее. Для редактирования ветки необходимо в главном меню выбрать кнопку “Branches”, и в выпавшем меню выбрать пункт “Редактирование”, далее появится новое меню, в котором будут представлены три функции для  работы с ветками: merge, rebase, cherry-pick.'
    },
    {
        id: 10,
        title: 'Как удалить ветку?',
        description: 'Для удаления ветки, необходимо в главном меню выбрать кнопку “Branches”, и в выпавшем меню выбрать пункт “Удаление”, далее произойдёт переадресация в терминал, где необходимо ввести имя ветки, которую необходимо удалить.'
    },
    {
        id: 11,
        title: 'Что такое MERGE?',
        description: 'Git-функция merge позволяет выполнить слияние коммитов по дате их создания. Используется когда есть 2 и более master ветки (к примеру master и prototype) и в этих ветках очень много комитов (и rebase здесь не подходит) и обычно через какое-то время, maintainer репозитория наработки из prototype ветки "сливается" в master ветку посредством git merge. Внимание! Работа ведётся только с существующими ветками. Выполнить слияние, посредством merge можно выбором соответствующей функции “merge” в меню. Далее в терминале необходимо ввести название основной ветки, далее ветки для слияния'
    },
    {
        id: 12,
        title: 'Что такое REBASE?',
        description: 'Git-функция rebase позволяет выполнить синхронизацию с указанной веткой. Синхронизация с главной веткой, в которую добавляют коммиты все разработчики проекта. Полезно когда кто-то вносит изменения в участок кода с которым пользователь работает в данный момент, в своей ветке, что через какое-то время можно было без проблем смержиться с master веткой. Обычно делается каждое утро перед началом рабочего дня и в конце когда определённый функционал готов. Выполнить синхронизацию, посредством rebase можно выбором соответствующей функции “rebase” в меню. Далее в терминале необходимо ввести название основной ветки, далее ветки для синхронизации'
    },
    {
        id: 13,
        title: 'Что такое CHERRY-PICK?',
        description: 'Git-функция cherry-pick позволяет забрать коммиты одной ветки в другую. Это полезно когда изменения сделанные другим разработчиком в его ветке, прямо сейчас нужны в рабочей ветке, и что бы не писать этот код заново, можно просто забрать коммит в рабочую ветку. Выполнить перетягивание коммитов из одной ветки в другую посредством cherry-pick можно выбором соответствующей функции “cherry-pick” в меню. Далее в терминале необходимо ввести название основной ветки куда будут перетянуты коммиты, далее название ветки откуда будут перетянуты коммиты, далее номер коммита'
    }
];